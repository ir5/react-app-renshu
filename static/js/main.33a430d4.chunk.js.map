{"version":3,"sources":["index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","props","className","onClick","value","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","player","slice","currentPlayer","setState","concat","step","status","current","moves","map","move","desc","key","jumpTo","winner","handleClick","ReactDOM","render","document","getElementById"],"mappings":"iPAIA,SAASA,EAAgBC,GAWvB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,KAGT,SAASG,EAAOC,GACd,OACI,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,O,IAKTC,E,2KACSV,GAAI,IAAD,OACd,OAAO,kBAACK,EAAD,CAAQI,MAAOE,KAAKL,MAAMR,QAAQE,GACvCQ,QAAS,kBAAM,EAAKF,MAAME,QAAQR,Q,+BAKpC,OACE,6BACE,yBAAKO,UAAU,aACZI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKL,UAAU,aACZI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKL,UAAU,aACZI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,S,GAvBTC,IAAMC,WA8BpBC,E,kDACJ,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXC,QAAS,CAAC,CACRnB,QAASoB,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,OAAQ,GAPO,E,wDAWPrB,GACV,IAAMiB,EAAUN,KAAKK,MAAMC,QAAQK,MAAM,EAAGX,KAAKK,MAAMI,WAAa,GAC9DtB,EAAUmB,EAAQA,EAAQhB,OAAS,GAAGH,QAAQwB,QAChDzB,EAAgBC,IAAYA,EAAQE,KACxCF,EAAQE,GAAKW,KAAKY,gBAClBZ,KAAKa,SAAS,CACZP,QAASA,EAAQQ,OAAO,CAAC,CACvB3B,QAASA,KAEXsB,WAAYH,EAAQhB,OACpBoB,OAAQ,EAAIV,KAAKK,MAAMK,Y,6BAIpBK,GACLf,KAAKa,SAAS,CACZJ,WAAYM,EACZL,OAAQK,EAAO,M,sCAKjB,OAA6B,IAAtBf,KAAKK,MAAMK,OAAe,IAAM,M,+BAG/B,IAgBJM,EAhBG,OACDV,EAAUN,KAAKK,MAAMC,QACrBW,EAAUX,EAAQN,KAAKK,MAAMI,YAE7BS,EAAQZ,EAAQa,KAAI,SAACJ,EAAMK,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACI,wBAAIE,IAAKF,GACP,4BAAQvB,QAAS,kBAAM,EAAK0B,OAAOH,KAAQC,OAK7CG,EAAStC,EAAgB+B,EAAQ9B,SAQvC,OALE6B,EADEQ,EACO,WAAaA,EAEb,gBAAkBxB,KAAKY,gBAIhC,yBAAKhB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEZ,QAAS8B,EAAQ9B,QACjBU,QAAS,SAACR,GAAD,OAAO,EAAKoC,YAAYpC,OAGrC,yBAAKO,UAAU,aACb,6BAAMoB,GACN,4BAAKE,S,GAtEIhB,IAAMC,WA+EzBuB,IAASC,OACP,kBAACvB,EAAD,MACAwB,SAASC,eAAe,W","file":"static/js/main.33a430d4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction Square(props) {\n  return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return <Square value={this.props.squares[i]}\n      onClick={() => this.props.onClick(i)}\n    />;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      player: 0,\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const squares = history[history.length - 1].squares.slice();\n    if (calculateWinner(squares) || squares[i]) return;  // occupied\n    squares[i] = this.currentPlayer();\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      player: 1 - this.state.player,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      player: step % 2,\n    });\n  }\n\n  currentPlayer() {\n    return this.state.player === 0 ? 'X' : 'O'\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n        );\n    });\n\n    const winner = calculateWinner(current.squares);\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + this.currentPlayer();\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}